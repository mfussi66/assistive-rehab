# docker run -it --network host --gpus all --mount type=bind,source=${HOME}/.config/yarp,target=/root/.config/yarp icubteamcode/fdg-openpose:v2022.05.2_sources bash

version: "3.7"

x-yarp-openpose: &yarp-openpose
  image: icubteamcode/fdg-openpose:v2022.05.2_sources
  environment:
    - DISPLAY=${DISPLAY}
    - QT_X11_NO_MITSHM=1
    - XAUTHORITY=/root/.Xauthority
  volumes:
    - "/tmp/.X11-unix:/tmp/.X11-unix"
    - "${XAUTHORITY}:/root/.Xauthority"
    - "${HOME}/.config/yarp:/root/.config/yarp"
  network_mode: "host"
  privileged: true

services:

  yarprun:
    <<: *yarp-openpose
    command: bash -c "yarp run --server /datareceive --log"

  gazeController:
    <<: *yarp-openpose
    restart: on-failure
    command: sh -c "yarp wait /cer/head/command:i; yarp wait /cer/head/rpc:i; yarp wait /cer/head/state:o; cer_gaze-controller --cameras::file /projects/cer/build/share/CER/contexts/cameraCalibration/cerEyes_320x240.ini"

  navController:
    <<: *yarp-openpose
    command: sh -c "yarp wait /baseControl/rpc; yarp wait /baseControl/odometry:o; yarp wait /baseControl/control:i; navController --velocity-angular-saturation 15.0 --distance-target 2.5"

  y_openpose:
    <<: *yarp-openpose
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    command: sh -c "yarpOpenPose --model_folder /projects/openpose/models --img_resolution 320x240 --face_enable false --hand_enable false --num_scales 1"

  robotSkeletonPublisher:
    <<: *yarp-openpose
    command: sh -c "yarp wait /cer/head/command:i; yarp wait /cer/head/rpc:i; yarp wait /cer/head/state:o; yarp wait /cer/head/stateExt:o; yarp wait /cer/torso/command:i; yarp wait /cer/torso/rpc:i; yarp wait /cer/torso/state:o; yarp wait /cer/torso/stateExt:o; yarp wait /cer/torso_tripod/command:i; yarp wait /cer/torso_tripod/rpc:i; yarp wait /cer/torso_tripod/state:o; yarp wait /cer/torso_tripod/stateExt:o; yarp wait /cer/left_arm/command:i; yarp wait /cer/left_arm/rpc:i; yarp wait /cer/left_arm/state:o; yarp wait /cer/left_arm/stateExt:o; yarp wait /cer/right_arm/command:i; yarp wait /cer/right_arm/rpc:i; yarp wait /cer/right_arm/state:o; yarp wait /cer/right_arm/stateExt:o; yarp wait /cer/left_wrist_tripod/command:i; yarp wait /cer/left_wrist_tripod/rpc:i; yarp wait /cer/left_wrist_tripod/state:o; yarp wait /cer/left_wrist_tripod/stateExt:o; yarp wait /cer/right_wrist_tripod/command:i; yarp wait /cer/right_wrist_tripod/rpc:i; yarp wait /cer/right_wrist_tripod/state:o; yarp wait /cer/right_wrist_tripod/stateExt:o; robotSkeletonPublisher --robot cer"

  ## Connections
  
  yconnect_3:
    <<: *yarp-openpose
    command: sh -c "yarp wait /depthCamera/rgbImage:o; yarp wait /yarpOpenPose/image:i; yarp connect /depthCamera/rgbImage:o /yarpOpenPose/image:i mjpeg"

  yconnect_4:
    <<: *yarp-openpose
    restart: on-failure
    command: sh -c "yarp wait /depthCamera/depthImage:o; yarp wait /yarpOpenPose/float:i; yarp connect /depthCamera/depthImage:o /yarpOpenPose/float:i fast_tcp+send.portmonitor+file.depthimage_compression_zlib+recv.portmonitor+file.depthimage_compression_zlib+type.dll"

  yconnect_5:
    <<: *yarp-openpose
    restart: on-failure
    command: sh -c "yarp wait /yarpOpenPose/image:o; yarp wait /viewer/skeleton; yarp connect /yarpOpenPose/image:o /viewer/skeleton mjpeg"
